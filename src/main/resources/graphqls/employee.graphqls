type ResponseEmployee {
    id : ID!,
    name : String!,
    surname: String,
    age : Int,
    job : String,
    salary : Float,
    department: Department,
    status: ResponseStatus
}

type ResponseStatus{
    apiVersion : Float,
    details : ErrorDetails,
    errors: [Error]
}

type ErrorDetails{
    sendReport: String,
    reason: String,
    action: String
}

type Error {
    code : Float,
    message: String
}


type Department {
    id : ID!,
    departmentName : String,
    departmentCode : String
}

input EmployeeDTO {
    name : String!,
    surname: String,
    age : Int,
    job : String,
    salary : Float
}

extend type Query {
    findAllEmployees:[ResponseEmployee]!
    findEmployeeById(id: ID!):ResponseEmployee!
}


extend type Mutation {
    createEmployee(employee:EmployeeDTO):ResponseEmployee!
    updateEmployee(employee:EmployeeDTO!,id :ID!):ResponseEmployee
}